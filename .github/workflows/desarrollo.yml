name: Upload Website

on:
  push:
    branches:
    - main

env:
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_SHA: sync-files-py:${{ github.sha }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - id: files
      uses: jitterbit/get-changed-files@v1
      with:
        format: 'csv'
    # - run: |
    #     for changed_file in ${{ steps.files.outputs.all }}; do
    #       echo "Do something with this ${changed_file}."
    #       FILE=${changed_file}
    #       if [ -f "$FILE" ]; then
    #         cat ${changed_file}
    #       fi
    #     done
    #- name: Set files to base64 enconde
    # - id: random-color-generator
    #   run: echo COLOR=steps.files.outputs.all | base64 -d >> $GITHUB_OUTPUT
    # - id: random-color-generator-2
    #   run: echo ${{ steps.random-color-generator.outputs.COLOR }}
    - name: Check out code
      uses: actions/checkout@v2
    - name: build the docker
      id: upload_files
      run: |
        docker build -t $CONTAINER_SHA \
          --build-arg AWS_S3_BUCKET=${{ env.AWS_S3_BUCKET }} \
          --build-arg AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }} \
          --build-arg AWS_REGION='us-east-1' \
          --build-arg SOURCE_DIR='public' \
          --build-arg FILES=${{ steps.files.outputs.all }} \
          ./sync-files-py/
    - name: Get the output time
        run: echo "The time was ${{ steps.upload_files.outputs.time }}"
    # - uses: actions/checkout@master
    # - uses: jakejarvis/s3-sync-action@master
    #   with:
    #     args: --acl public-read --follow-symlinks --delete
    #   env:
    #     AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
    #     AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1
    #     SOURCE_DIR: 'public'      # optional: defaults to entire repository
    #     FILES: '1' #${{ steps.files.outputs.all }} | base64 -d